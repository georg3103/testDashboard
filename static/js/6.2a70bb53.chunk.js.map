{"version":3,"sources":["pages/ChartPage.js","utils/colors.js","utils/demos.js","components/Page.js","utils/propTypes.js"],"names":["MONTHS","genLineData","moreData","arguments","length","undefined","moreData2","labels","datasets","Object","_home_georg_testDashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","label","backgroundColor","getColor","borderColor","borderWidth","data","randomNum","ChartPage","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Page__WEBPACK_IMPORTED_MODULE_10__","title","breadcrumbs","name","active","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","xl","lg","md","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","react_chartjs_2__WEBPACK_IMPORTED_MODULE_9__","fill","__webpack_require__","d","__webpack_exports__","availableColor","window","getComputedStyle","document","documentElement","getPropertyValue","concat","faker_lib_random__WEBPACK_IMPORTED_MODULE_0__","faker_lib_random__WEBPACK_IMPORTED_MODULE_0___default","n","min","max","random","number","bem","objectSpread","PropTypes","ID","oneOfType","string","isRequired","component","func","date","instanceOf","Date","bn","create","Page","_ref","Tag","tag","className","children","restProps","objectWithoutProperties","classes","b","react_default","assign","defaultProps"],"mappings":"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","file":"static/js/6.2a70bb53.chunk.js","sourcesContent":["import React from 'react';\n\nimport { getColor } from '../utils/colors';\nimport { randomNum } from '../utils/demos';\n\nimport { Row, Col, Card, CardHeader, CardBody } from 'reactstrap';\n\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport Page from '../components/Page';\n\nconst MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n\nconst genLineData = (moreData = {}, moreData2 = {}) => {\n  return {\n    labels: MONTHS,\n    datasets: [\n      {\n        label: 'Dataset 1',\n        backgroundColor: getColor('primary'),\n        borderColor: getColor('primary'),\n        borderWidth: 1,\n        data: [\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n        ],\n        ...moreData,\n      },\n      {\n        label: 'Dataset 2',\n        backgroundColor: getColor('secondary'),\n        borderColor: getColor('secondary'),\n        borderWidth: 1,\n        data: [\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n        ],\n        ...moreData2,\n      },\n    ],\n  };\n};\n\nconst ChartPage = () => {\n  return (\n    <Page title=\"Charts\" breadcrumbs={[{ name: 'Charts', active: true }]}>\n      <Row>\n        <Col xl={6} lg={12} md={12}>\n          <Card>\n            <CardHeader>Bar</CardHeader>\n            <CardBody>\n              <Bar data={genLineData()} />\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col xl={6} lg={12} md={12}>\n          <Card>\n            <CardHeader>Line</CardHeader>\n            <CardBody>\n              <Line data={genLineData({ fill: false }, { fill: false })} />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Page>\n  );\n};\n\nexport default ChartPage;\n","export const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import random from 'faker/lib/random';\n\nexport const randomNum = (min = 0, max = 1000) => {\n  return random().number({ min, max });\n};\n","import React from 'react';\nimport PropTypes from '../utils/propTypes';\n\nimport bn from '../utils/bemnames';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nPage.defaultProps = {\n  tag: 'div',\n};\n\nexport default Page;\n","import PropTypes from 'prop-types';\n\nexport default {\n  ...PropTypes,\n  ID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n};\n"],"sourceRoot":""}