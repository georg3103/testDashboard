{"version":3,"sources":["utils/prepareData.js","pages/BarChartPage.js","utils/colors.js","utils/demos.js","components/Page.js","utils/propTypes.js"],"names":["MONTHS","genData","moreData","arguments","length","undefined","moreData2","labels","datasets","Object","_home_georg_testDashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","label","backgroundColor","getColor","borderColor","borderWidth","data","randomNum","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_utils_prepareData__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","react_chartjs_2__WEBPACK_IMPORTED_MODULE_7__","_components_Page__WEBPACK_IMPORTED_MODULE_8__","ChartPage","a","createElement","title","breadcrumbs","name","active","xl","lg","md","d","availableColor","window","getComputedStyle","document","documentElement","getPropertyValue","concat","faker_lib_random__WEBPACK_IMPORTED_MODULE_0__","faker_lib_random__WEBPACK_IMPORTED_MODULE_0___default","min","max","random","number","bem","objectSpread","PropTypes","ID","oneOfType","string","isRequired","component","func","date","instanceOf","Date","bn","create","Page","_ref","Tag","tag","className","children","restProps","objectWithoutProperties","classes","b","react_default","assign","defaultProps"],"mappings":"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","file":"static/js/4.db05694e.chunk.js","sourcesContent":["import { getColor } from '../utils/colors';\nimport { randomNum } from '../utils/demos';\n\nconst MONTHS = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n];\n\nconst genData = (moreData = {}, moreData2 = {}) => {\n  return {\n    labels: MONTHS,\n    datasets: [\n      {\n        label: 'Data 1',\n        backgroundColor: getColor('primary'),\n        borderColor: getColor('primary'),\n        borderWidth: 1,\n        data: [\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n        ],\n        ...moreData,\n      },\n      {\n        label: 'Data 2',\n        backgroundColor: getColor('secondary'),\n        borderColor: getColor('secondary'),\n        borderWidth: 1,\n        data: [\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n        ],\n        ...moreData2,\n      },\n    ],\n  };\n};\n\nexport default genData;\n","import React from 'react';\n\nimport genData from '../utils/prepareData';\n\nimport { Row, Col, Card, CardHeader, CardBody } from 'reactstrap';\n\nimport { Bar } from 'react-chartjs-2';\n\nimport Page from '../components/Page';\n\n\nconst ChartPage = () => {\n  return (\n    <Page title=\"Charts\" breadcrumbs={[{ name: 'Charts', active: true }]}>\n      <Row>\n        <Col xl={6} lg={12} md={12}>\n          <Card>\n            <CardHeader>Bar</CardHeader>\n            <CardBody>\n              <Bar data={genData()} />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Page>\n  );\n};\n\nexport default ChartPage;\n","export const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import random from 'faker/lib/random';\n\nexport const randomNum = (min = 0, max = 1000) => {\n  return random().number({ min, max });\n};\n","import React from 'react';\nimport PropTypes from '../utils/propTypes';\n\nimport bn from '../utils/bemnames';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nPage.defaultProps = {\n  tag: 'div',\n};\n\nexport default Page;\n","import PropTypes from 'prop-types';\n\nexport default {\n  ...PropTypes,\n  ID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n};\n"],"sourceRoot":""}